.custom-cursor,
.cursor-core,
.cursor-ring {
    box-sizing: border-box;
    transform-origin: center center;
}







        /* 此 CSS 选择器使用通配符 *，表示选中页面上的所有元素，作用是将页面上所有元素的原来鼠标指针图标设置为无
        * 即当用户将鼠标移动到页面上的任何元素上时，原来鼠标指针图标将不会显示
        * !important 关键字用于提高该样式规则的优先级，确保该样式不会被其他样式规则覆盖 */

* {
    cursor: none !important;
}





        /* custom：风俗的，习俗的，习惯的；定制的，自定义的 */
          /* fixed：固定的
        * 固定定位的元素会相对于浏览器窗口进行定位，也就是说，无论页面如何滚动，
        * 该元素在浏览器窗口中的位置都不会改变。这是因为固定定位的元素脱离了文档流，
        * 不会对其他元素的布局产生影响，同时也不会随着其他元素的滚动而滚动。
        * 元素始终跟随鼠标移动，并且不受页面滚动的干扰，始终保持在浏览器窗口内可见。*/

.custom-cursor {
    position: fixed;
    width: 32px;
    height: 32px;
/* 
设置 `pointer-events` 属性为 `none` 的作用是让该元素不响应鼠标事件。也就是说，当鼠标在这个元素上进行点击、悬停、拖动等操作时，
这些事件会直接穿透该元素，作用到其下方的元素上。在这个自定义光标样式里，设置该属性可以确保自定义光标不会干扰用户与页面上其他元素的正常交互，
用户的鼠标操作能准确地作用到页面上原本应该响应的元素上。
*/
    pointer-events: none;





                /* 1000……000 (有31个0) = -2^31
            0111……111 (有31个1) = 2^0+2^1+2^2……+2^30 (等比数列求和) = +2^31-1  = 2147483647
            在有符号 32 位整数系统里，数值采用二进制补码形式存储。有符号 32 位整数的最高位是符号位，剩下 31 位用于表示数值大小
            最高位是符号位(1为负数，0为正数)，所以最大值是 2^31 - 1。将 z-index 设置为最大值，确保该元素始终显示在其他元素的最上层 */
    z-index: 2147483647;




           /*  一.transform 属性用于对元素进行 2D 或 3D 变换
            这里为平移变换，它将元素在水平和垂直方向上都向左上方移动自身宽度和高度的 50%
            第一个参数 `-50%` 表示在水平方向（X 轴）上，将元素向左移动自身宽度的 50%
            第二个参数 `-50%` 表示在垂直方向（Y 轴）上，将元素向上移动自身高度的 50%
            因为鼠标指针的点击位置，是左上角的尖端，而不是鼠标中心
            所以transform: translate(-50%, -50%)可以让自定义的光标元素的中心点，与鼠标左上角指针的点击位置重合
            二.translateZ(0) transform 属性的一个值，用于在3D空间中对元素进行Z轴方向的平移。当值为 0 时，元素在Z轴方向上没有实际的平移，但它有一些特殊的作用：
            1.触发硬件加速：在一些浏览器中，使用 translateZ(0) 可以触发浏览器对元素进行硬件加速渲染。这能使元素的动画效果更加流畅，提升性能，减少卡顿
            2.创建新的层叠上下文，防止元素被其他元素遮挡：在一些情况下，使用 translateZ(0) 可以创建一个新的层叠上下文，防止元素被其他元素遮挡。*/

transform: translate(-50%, -50%) translateZ(0);



            /* transition：转变，过渡
            控制 transform 属性变化时的过渡效果，过渡时间为 0.01 秒，采用线性的过渡方式，即匀速变化 */
            transition: transform 0.01s linear;

            /* 设置元素变换的原点为中心位置，这样在进行旋转、缩放等变换操作时，会以元素的中心点为基准 */
            transform-origin: center;

            /* 告诉浏览器该元素的 transform 属性即将发生变化，有助于浏览器提前进行优化，提高渲染性能 */
            will-change: transform;

            /* 当元素旋转到背面时，将其隐藏，为了确保自定义鼠标光标元素在进行 3D 变换时，背面不会显示出来。
            -webkit- 前缀是为了兼容 Safari 等浏览器 */
            backface-visibility: hidden;
            -webkit-backface-visibility: hidden;
}




.cursor-core {
            /* fixed ：常用于创建固定在页面某个位置的元素，如导航栏、返回顶部按钮等，方便用户在页面滚动时始终能快速访问这些元素
            absolute ：常用于精确控制元素在页面中的位置，如弹出框、下拉菜单等，可根据其祖先元素的位置进行精准定位 */
            position: absolute;


    width: 12px;
    height: 12px;








    
            /*  linear：线性的 ；gradient：梯度，坡度，渐变 ；var：variable；可变的，变量
            时针6点钟方向为0度(degree)，方向沿着顺时针方向
            0deg 或 360deg：从下往上渐变
            45deg：从左下角到右上角渐变
            90deg：从左往右渐变
            135deg：从左上角到右下角渐变
            180deg：从上往下渐变
            270deg：从右往左渐变 */
   
   
            background: linear-gradient(90deg, var(--primary-color, #00f7ff), var(--secondary-color, #0066cc));
  
  
              /* 当元素的宽度和高度相等时，设置元素边框圆角为 50% 可将元素变为圆形 ( radius：半径 ) 
           内容：   content
           内边距： padding
           边框：   border
           外边距： margin      */
           border-radius: 50%;



                       /* box-shadow 属性用于为元素添加阴影效果。它接受多个参数，通过这些参数可以控制阴影的位置、模糊程度和颜色等。
            第一个参数 0 表示阴影在水平方向上的偏移量，0 意味着阴影不会在水平方向上产生偏移，即与元素的左边缘对齐。
            第二个参数 0 表示阴影在垂直方向上的偏移量，0 意味着阴影不会在垂直方向上产生偏移，即与元素的上边缘对齐。
            第三个参数 15px 表示阴影的模糊半径，值越大，阴影就越模糊。这里设置为 15px，会使阴影呈现出较为柔和的效果。
            第四个参数 决定阴影的颜色。*/
    box-shadow: 0 0 15px var(--primary-color, #00f7ff);





            /* top: 50%--将元素的上边缘相对于其父元素的上边缘向下偏移 50% 的父元素高度
             left: 50%--将元素的左边缘相对于其父元素的左边缘向右偏移 50% 的父元素宽度
             结合transform: translate(-50%, -50%)，可将元素定位到父元素的中心位置 */
             top: 50%;
             left: 50%;





    transform: translate(-50%, -50%) translateZ(0);






                /* 
             * 为元素应用动画效果。
             * 动画名称为 pulse(脉冲)，动画持续时间为 1.5 秒，无限循环播放，并且在每次循环结束时反向播放。
             * 这个动画会使元素产生脉冲的视觉效果
             * 模拟叶文洁向宇宙发出地球位置广播："我真诚地呼唤"，"我在这里~"，"黑暗森林~"
             */
    animation: pulse 1.5s infinite alternate;




          /* 
             * 设置元素的 3D 变换样式。
             * preserve-3d 表示子元素将保留其 3D 变换，不会被扁平化到 2D 平面上。
             */
             transform-style: preserve-3d;


    will-change: transform;
    transform-origin: center;
    z-index: 99999;
}





.cursor-ring {
    position: absolute;


                /* 设置元素的宽度和高度为其父元素宽度的 100% */
    width: 100%;
    height: 100%;
    border-radius: 50%;





                /* 
             * 为元素添加阴影效果，可创建出环形的发光效果。
             * rgba：red、green、blue、alpha，分别表示红、绿、蓝三原色和透明度。
             * 第一个阴影：水平和垂直偏移量都为 0，模糊半径为 15px，颜色为 rgba(0, 247, 255, 0.8)，用于创建较亮的外层光晕。
             * 第二个阴影：水平和垂直偏移量都为 0，模糊半径为 30px，颜色为 rgba(0, 170, 255, 0.6)，用于创建较淡的外层光晕。
             * 第三个阴影：使用 inset 关键字表示内部阴影，水平和垂直偏移量都为 0，模糊半径为 10px，颜色为 rgba(0, 102, 204, 0.8)，用于创建内部的光晕。
             */
    box-shadow:
        0 0 15px rgba(0, 247, 255, 0.8),
        0 0 30px rgba(0, 170, 255, 0.6),
        inset 0 0 10px rgba(0, 102, 204, 0.8);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) translateZ(0);



                /* 
             * 为元素应用动画效果。
             * 第一个动画 rotate，持续时间为 3 秒，线性播放，无限循环，使元素进行旋转。
             * 第二个动画 ringGlow，持续时间为 3 秒，缓入缓出播放，无限循环，并且在每次循环结束时反向播放，使元素的发光效果产生变化。
             */
    animation:
        rotate 3s linear infinite,
        ringGlow 3s ease-in-out infinite alternate;



/*
        * 设置元素的盒模型计算方式为 border-box。
        * 这意味着元素的宽度和高度包括内容、内边距和边框，而不包括外边距。
        */
       box-sizing:border-box;
    z-index: 9999999;
}






        /*
         * 为 .cursor-ring 元素添加一个伪元素 ::before，用于创建一个具有特定样式的圆环效果。
         * .cursor-ring::before 只是在其基础上添加额外的视觉效果，两者共同作用构建出完整的光标样式。
         */
.cursor-ring::before {


                /*
             * content 属性用于在伪元素中插入内容。这里设置为空字符串，意味着不插入实际的文本内容。
             * 对于 ::before 和 ::after 伪元素，content 属性是必需的，即使它的值为空。
             */
    content: '';


              /*
             * position 属性设置为 absolute，使该伪元素脱离正常文档流，相对于最近的定位祖先元素（即 .cursor-ring）进行定位。
             * 这样可以精确控制伪元素在 .cursor-ring 内的位置。
             */

    position: absolute;



                /*
             * top、left、right 和 bottom 属性都设置为 0，这会使伪元素的四个边缘分别与 .cursor-ring 元素的四个边缘对齐。
             * 也就是说，伪元素完全覆盖 .cursor-ring 元素。
             */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 50%;
    padding: 3px;
    background: linear-gradient(135deg, #00f7ff 0%, #00aaff 40%, #0066cc 100%);
  
   
               /*
             * -webkit-mask 属性是为了兼容 Safari 等基于 WebKit 内核的浏览器而设置的遮罩效果。
             * 第一个 linear-gradient(#fff 0 0) content-box 表示一个白色的线性渐变，范围限制在内容框内。
             * 第二个 linear-gradient(#fff 0 0) 表示另一个白色的线性渐变，覆盖整个元素。
             * 这两个渐变结合起来，用于控制背景的显示区域。
             */

    -webkit-mask:
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
    mask:
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
}







@keyframes pulse {
    0% {
        transform: translate(-50%, -50%) scale(0.9);
        opacity: 0.8;
    }
    100% {
        transform: translate(-50%, -50%) scale(1.1);
        opacity: 1;
    }
}

@keyframes rotate {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}










        /*
         * keyframes : 关键帧
         * 定义一个名为 ringGlow 的关键帧动画，用于控制环形元素的发光效果动态变化
         * 关键帧动画允许在动画过程中定义多个时间点（关键帧）的样式，浏览器会自动在这些关键帧之间进行过渡
         * 这里的 0% 到 100% 时间段指的是 `ringGlow` 这个关键帧动画从开始到结束的整个过程
         * 动画会在其持续时间（这里设置为 3 秒）内，从 0% 这个起始状态逐渐过渡到 100% 这个结束状态，在此期间逐渐改变环形元素的滤镜、不透明度和阴影效果
         * 从而实现发光效果的动态变化，增强视觉效果
         */

         @keyframes ringGlow {

            /* 动画起始状态（0%） */
            0% {
                /* 滤镜效果：
                 * hue-rotate(-10deg)：将元素的色相旋转 -10 度，轻微改变颜色的色调。
                 * brightness(1)：设置元素的亮度为 1，即正常亮度。
                 */
                filter: hue-rotate(-10deg) brightness(1);
                /* 不透明度设置为 0.9，元素呈现出一定的半透明效果 */
                opacity: 0.9;
                /* 阴影效果：
                 * 第一个阴影：水平和垂直偏移量都为 0，模糊半径为 10px，颜色为 rgba(0, 247, 255, 0.8)，用于创建较亮的外层光晕。
                 * 第二个阴影：水平和垂直偏移量都为 0，模糊半径为 20px，颜色为 rgba(0, 170, 255, 0.6)，用于创建较淡的外层光晕。
                 * 第三个阴影：使用 inset 关键字表示内部阴影，水平和垂直偏移量都为 0，模糊半径为 8px，颜色为 rgba(0, 102, 204, 0.8)，用于创建内部的光晕。
                 */
                box-shadow:
                    0 0 10px rgba(0, 247, 255, 0.8),
                    0 0 20px rgba(0, 170, 255, 0.6),
                    inset 0 0 8px rgba(0, 102, 204, 0.8);
            }

            /* 动画结束状态（100%） */
            100% {
                /* 滤镜效果：
                 * hue-rotate(20deg)：将元素的色相旋转 20 度，使颜色的色调发生明显变化。
                 * brightness(1.6)：设置元素的亮度为 1.6，让元素变得更亮。
                 */
                filter: hue-rotate(20deg) brightness(1.6);
                /* 不透明度设置为 1，元素完全不透明 */
                opacity: 1;
                /* 阴影效果：
                 * 第三个阴影：使用 inset 关键字表示内部阴影，水平和垂直偏移量都为 0，模糊半径为 15px，颜色为 rgba(0, 102, 204, 1)，用于创建更亮的内部光晕。
                 */
                box-shadow:
                    0 0 25px rgba(0, 247, 255, 1),
                    0 0 40px rgba(0, 170, 255, 0.8),
                    inset 0 0 15px rgba(0, 102, 204, 1);
            }
        }




           /* 
         * 定义鼠标轨迹元素的样式，该元素用于在鼠标移动时显示跟随的特效。
         * 这些特效模拟了星际空间的各种视觉效果，如银河核心脉冲、星云扩散等。
         */     
.cursor-trail {
    position: absolute;
    top: 50%;
    left: 50%;

    /*  calc：calculate(计算)
    基础宽度为 38 像素，再加上一个动态值
    `--move-intensity` 变量用于动态调整 `.cursor-trail` 元素的宽度和高度
    `--move-intensity`变量的值会根据用户的交互强度而变化，例如鼠标移动速度、点击频率等
    随着这些变化，`--move-intensity` 变量的值也会相应地改变
    这样当鼠标移动速度加快时，元素的宽度和高度会相应增大，反之则减小
    从而使元素的宽度和高度随之动态变化，增强视觉效果
    如果删除`--move-intensity` 变量，元素的宽度将固定为 38px，失去动态变化的效果 */
    width: calc(34px + var(--move-intensity, 0) * 6px);
    height: calc(34px + var(--move-intensity, 0) * 6px);
    transform: translate(-50%, -50%) translateZ(0);
    /* 
     * 设置元素的 3D 变换样式，`preserve-3d` 表示子元素将保留其 3D 变换，不会被扁平化到 2D 平面上。
     */
    transform-style: preserve-3d;

    will-change: transform;
    z-index: 99999999999;
    /* 
     * 设置元素变换的原点为中心位置，这样在进行旋转、缩放等变换操作时，会以元素的中心点为基准。
     */
    transform-origin: 50% 50%;
    background:
        /* 银河核心脉冲效果，从中心向外辐射不同颜色的渐变，模拟银河核心的脉冲光效 */
        /* 
         * radial-gradient 径向渐变函数，从一个中心点向四周辐射的渐变。
         * circle at 50% 50% 表示渐变的形状为圆形，中心点位于元素的水平和垂直方向的正中间。

         */
        radial-gradient(circle at 50% 50%,
            /* 
             * hsla ：色相（hue）、饱和度（saturation）、亮度（lightness）、透明度（alpha）。
             * 这里色相为 180 度，饱和度为 100%，亮度为 50%，透明度为 0.98。
             * 该颜色位于渐变的起始位置（0%），也就是圆形的中心点。
             */
            hsla(180, 100%, 50%, 0.98) 0%,

            hsla(185, 100%, 50%, 0.95) 5%,
            hsla(190, 100%, 50%, 0.9) 25%,

            /* 
             * transparent 表示透明颜色。
             * 从距离中心点 75% 的位置开始，渐变变为透明。
             */
            transparent 75%),


        /* 星云扩散层 */
        radial-gradient(circle at 50% 50%,
            hsla(200, 100%, 70%, 0.95) 10%,
            hsla(205, 100%, 60%, 0.8) 30%,
            transparent 85%),
        /* 量子星光粒子效果，以中心为原点重复进行径向渐变，模拟量子星光闪烁的效果 */

        /* 径向渐变是从一个中心点向四周扩散的渐变效果，而 repeating-radial-gradient 会不断重复这个渐变模式
circle at 50% 50% 表示渐变的形状是圆形，并且圆心位于元素的中心位置（水平和垂直方向均为 50%）*/
        repeating-radial-gradient(circle at 50% 50%,
            /* rgba(255, 255, 255, 0.98) 表示白色，透明度为 0.98。从 0% 到 0.3% 的区域应用该颜色。*/
            rgba(255, 255, 255, 0.98) 0% 0.3%,
            /* hsla(245, 100%, 95%, 0.8) 表示色相为 245 度，饱和度为 100%，亮度为 95%，透明度为 0.8 的颜色。从 0.3% 到 0.6% 的区域应用该颜色*/
            hsla(245, 100%, 95%, 0.8) 0.3% 0.6%,
            hsla(218, 80%, 42%, 0.6) 0.6% 0.9%,
            hsla(206, 75%, 53%, 0.4) 0.9% 1.2%,
            /* transparent 表示透明，从 1.2% 到 2.5% 的区域应用透明效果 */
            transparent 1.2% 2.5%),

        /* 动态星尘流体效果，根据 --mouse-dx 和 --mouse-dy 变量计算渐变角度，模拟动态的星尘流体效果 */
        linear-gradient(calc(var(--mouse-dx) * 1.5deg + var(--mouse-dy) * 1.5deg + 25deg),
            hsla(228, 4%, 77%, 0.95) 10%,
            hsla(0, 0%, 87%, 0.9) 40%,
            hsla(230, 75%, 98%, 0.85) 80%);
    border-radius: 50%;
    pointer-events: none;
    /* 
     * 再次设置元素的堆叠顺序，覆盖之前的值，将其设置为 9998，确保该元素在页面中处于更高的层级。
     */
    z-index: 999999999;
    /* 
     * 为元素应用滤镜效果，包括模糊、对比度、亮度调整和投影效果。
     * 模糊程度根据 `--move-intensity` 变量计算，亮度根据 `--click-intensity` 变量计算。
     */
    filter:
        blur(calc(0.5px + var(--move-intensity, 0) * 0.5px)) contrast(1200%) brightness(calc(4.8 + var(--click-intensity, 0) * 1.2)) drop-shadow(0 0 50px rgba(8, 25, 180, 0.97));
    /* 
     * 设置元素与背景的混合模式为 `plus-lighter`，将元素颜色与背景颜色相加，使元素更亮。
     */
    mix-blend-mode: plus-lighter;
    /* 
     * 再次设置元素变换的原点为中心位置，确保在进行变换操作时以中心点为基准。
     */
    transform-origin: 50% 50%;
    /* 
     * 为元素添加阴影效果，包括外部阴影和内部阴影，模拟元素的发光和立体感。
     */
    box-shadow:
        0 0 80px rgba(59, 139, 230, 0.95),
        0 0 75px rgba(80, 172, 214, 0.8),
        inset 0 0 70px #144c9f80,
        inset 0 0 60px rgba(36, 109, 226, 0.9);
    /* 
     * 为元素的多个属性设置过渡效果，当这些属性值发生变化时，会以指定的时间和贝塞尔曲线进行过渡动画。
     */
    transition:
        transform 0.012s cubic-bezier(0.22, 2.5, 0.28, 2.2),
        opacity 0.024s cubic-bezier(0.4, 0, 0.2, 2.0),
        width 0.024s cubic-bezier(0.18, 1.8, 0.82, 1.8),
        height 0.024s cubic-bezier(0.18, 1.8, 0.82, 1.8),
        filter 0.024s ease;
    /* 
     * 对元素进行变换操作，包括平移、缩放和旋转。
     * 缩放比例根据 `--click-intensity` 变量计算，旋转角度根据 `--mouse-dx` 和 `--rotate-angle` 变量计算。
     */
    transform:
        translate(-50%, -50%) scale(calc(1 + var(--click-intensity, 0) * 0.8)) rotate(calc(var(--mouse-dx) * 1.2deg + var(--rotate-angle, 0) * 1.2deg));
    /* 
     * 告诉浏览器该元素的 `transform`、`opacity` 和 `filter` 属性即将发生变化，有助于浏览器提前进行优化，提高渲染性能。
     */
    will-change: transform, opacity, filter;



    /* 增强物理模拟 */
    --move-speed: calc(min(max((var(--mouse-speed, 0) - 0.15) * 2.5, 0), 1));
    --particle-size: calc(1px + var(--move-speed) * 1.5px);
    --trail-opacity: calc(0.95 - var(--move-speed) * 0.6);
    --fluid-distortion: calc(var(--mouse-speed, 0) * 0.4deg);

    /* 量子粒子系统v2 */
    &::before {
        content: '';
        position: absolute;
        width: 300%;
        height: 300%;
        background:
            radial-gradient(circle at var(--particle-pos, 50% 50%),
                rgba(255, 255, 255, 0.98) 10%,
                transparent 90%),
            repeating-linear-gradient(45deg,
                rgba(255, 255, 255, 0.4) 0px 2px,
                transparent 2px 5px),
            repeating-radial-gradient(circle,
                rgba(0, 245, 255, 0.3) 0% 1%,
                transparent 1% 3%);
        mix-blend-mode: plus-lighter;
        animation:
            particleFlow 0.6s cubic-bezier(0.2, 0, 0.8, 1) infinite,
            particleSpin 4s linear infinite;
        opacity: calc(0.9 * var(--move-intensity) * (1 + var(--move-speed, 0)));
        transform:
            translate(-50%, -50%) rotate(calc(var(--mouse-dx) * 1.2deg)) perspective(1000px) rotateX(calc(var(--mouse-dy) * -0.5deg));
        filter:
            brightness(calc(1.6 + var(--click-intensity, 0) * 0.4)) contrast(200%) drop-shadow(0 0 4px rgba(255, 255, 255, 0.8));
        transition:
            opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1),
            transform 0.15s linear;
    }

    /* 动态量子场追踪 */
    &::after {
        content: '';
        position: absolute;
        top: -25%;
        left: -25%;
        width: 150%;
        height: 150%;
        background:
            radial-gradient(ellipse at var(--gradient-pos, 50% 50%),
                rgba(0, 245, 255, 0.7) 0%,
                rgba(93, 175, 213, 0.6) 30%,
                transparent 70%),
            conic-gradient(from calc(var(--rotate-angle, 0) * 1deg) at 50% 50%,
                rgba(255, 255, 255, 0.2) 0deg,
                rgba(0, 245, 255, 0.3) 90deg,
                rgba(26, 69, 225, 0.3) 180deg,
                rgba(255, 255, 255, 0.2) 270deg),
            linear-gradient(to var(--gradient-direction, 135deg),
                rgba(255, 255, 255, 0.15) 0%,
                transparent 40%,
                rgba(0, 245, 255, 0.15) 80%);
        mix-blend-mode: color-dodge;
        opacity: calc(0.95 * var(--move-intensity) * (1 - var(--move-speed, 0)));
        transition:
            opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1),
            background 0.3s ease;
        filter:
            contrast(180%) brightness(1.4) blur(calc(0.2px + var(--move-speed, 0) * 0.3px));
        transform:
            rotate(calc(var(--mouse-dx) * 0.3deg)) skew(calc(var(--mouse-dy) * 0.4deg)) scale(calc(1 + var(--click-intensity, 0) * 0.1));
        animation: gradientRotate 8s linear infinite;
    }

    @keyframes particleSpin {
        from {
            transform: translate(-50%, -50%) rotate(0deg);
        }

        to {
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }

    @keyframes gradientRotate {
        from {
            --rotate-angle: 0;
        }

        to {
            --rotate-angle: 360;
        }
    }

    /* 粒子流动效果 */
    &::before {
        content: '';
        position: absolute;
        width: 180%;
        height: 180%;
        background:
            radial-gradient(circle at var(--particle-pos),
                rgba(255, 255, 255, 0.9) 0%,
                transparent 80%),
            repeating-linear-gradient(45deg,
                rgba(255, 255, 255, 0.2) 0px,
                rgba(255, 255, 255, 0.2) 2px,
                transparent 2px,
                transparent 4px);
        mix-blend-mode: soft-light;
        animation: particleFlow 1.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
        opacity: calc(0.7 * var(--move-intensity));
    }

    /* 动态光影追踪 */
    &::after {
        content: '';
        position: absolute;
        top: -15%;
        left: -15%;
        width: 130%;
        height: 130%;
        background:
            radial-gradient(circle at var(--gradient-pos, 50% 50%),
                rgba(0, 240, 255, 0.5) 0%,
                rgba(82, 194, 179, 0.4) 50%,
                transparent 100%),
            linear-gradient(to var(--gradient-direction, 135deg),
                rgba(255, 255, 255, 0.1) 0%,
                transparent 50%,
                rgba(0, 240, 255, 0.1) 100%);
        mix-blend-mode: color-dodge;
        opacity: calc(0.6 * var(--move-intensity));
        transition:
            opacity 0.25s,
            background 0.3s;
    }
}

        